<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Task</title>
</head>

<body>

    <script type="module" src="./main.js"></script>
</body>

</html>
//////////////////
import Shape from "./shape.js";

class Rectangle extends Shape {
  constructor(width, height) {
    super(width, height);
  }
  area() {
    return this.width * this.height;
  }
  parameter() {
    return 2 * (this.width + this.height);
  }

  toString() {
    return `Rec area: ${this.area()}, parameter: ${this.parameter()}`;
  }
}

//rectangle
const rec = new Rectangle(2, 3);
console.log(rec.toString());

class Square extends Shape {
  constructor(width, height) {
    super(width, height);
  }

  area() {
    return this.width * this.height;
  }

  parameter() {
    return 2 * (this.width + this.height);
  }

  toString() {
    return `Sq area: ${this.area()}, parameter: ${this.parameter()}`;
  }
}

const sq = new Square(4, 4);
console.log(sq.toString());


class Circle extends Shape {
  constructor(radius) {
    super();
    this.radius = radius;
  }

  area() {
    return Math.PI * this.radius ** 2;
  }

  parameter() {
    return 2 * Math.PI * this.radius;
  }

  toString() {
    return `Circ area: ${this.area()}, parameter: ${this.parameter()}`;
  }
}
const cir = new Circle(4);
console.log(cir.toString());////////////////////
export default class Shape {
  constructor(width, height) {
    this.width = width;
    this.height = height;
  }

}///////////////////
day2////////////////
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>task 3 ecma</title>
    <link rel="stylesheet" href="style.css">
</head>
<body>
    <div id="tabs"></div>
    <div id="content"></div>

    <script src="main.js"></script>
</body>
</html>
////
#tabs {
    display: flex;
    flex-wrap: wrap;
    margin-bottom: 20px;
}

.tab {
    padding: 10px 20px;
    margin: 5px;
    border: 1px solid #299c42;
    cursor: pointer;
    border-radius: 5px;
}

.tab.active {
    background-color: #1bd16d;
    color: white;
}

#content {
    padding: 20px;
    border: 1px solid #ff0000;
    border-radius: 5px;
}

///
document.addEventListener('DOMContentLoaded', () => {
    const tabsContainer = document.getElementById('tabs');
    const contentContainer = document.getElementById('content');

    fetch('https://jsonplaceholder.typicode.com/users')
        .then(response => response.json())
        .then(users => {
            users.forEach((user, index) => {
                const tab = document.createElement('div');
                tab.classList.add('tab');
                tab.textContent = user.username;
                tab.addEventListener('click', () => displayUserData(user, tab));
                tabsContainer.appendChild(tab);
                if (index === 0) {
                    displayUserData(user, tab);
                }
            });
        })
        .catch(error => console.error('Error fetching users:', error));

    function displayUserData(user, clickedTab) {
        document.querySelectorAll('.tab').forEach(tab => tab.classList.remove('active'));
        clickedTab.classList.add('active');

        contentContainer.innerHTML = `
            <h2>${user.name}</h2>
            <p><strong>Email:</strong> ${user.email}</p>
            <p><strong>Phone:</strong> ${user.phone}</p>
            <p><strong>Website:</strong> ${user.website}</p>
            <p><strong>Company:</strong> ${user.company.name}</p>
            <p><strong>Address:</strong> ${user.address.suite}, ${user.address.street}, ${user.address.city}, ${user.address.zipcode}</p>
        `;
    }
});


///dAY3


<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>day 1 ecma task</title>
</head>
<body>
    <script src="main.js"></script>
</body>
</html>///
//destructing -->>task1
// let a = 10;
// let b = 20;
// [a, b] = [b, a];
// console.log(a , b); 



//findmax -->>task2
// function findMax(...numbers) 
// {
//     return Math.max(...numbers);
// }
// console.log(findMax(1, 2, 3, 4, 5, 6)); 







//-->>task3
//  Use find to get the first string that starts with 'e'
//  Use map to create a new array with each string converted to uppercase
//  !!???? Use filter to create a new array with strings that have more than 5 characters !!!????
//  Use forEach to display all elements 



// var fruits = ["apple", "banana", "cherry", "date", "elderberry", "fig", "grape"];
// var StringOfE = fruits.find(fruit => fruit.startsWith('e'));//usefind

// var UppercaseFruits = fruits.map(fruit => fruit.toUpperCase());//udemap

// var StringWithMoreThanFiveChars = fruits.filter(fruit => fruit.length > 5);//usefilter
// console.log(StringOfE);
// console.log(UppercaseFruits); 
// console.log(StringWithMoreThanFiveChars);
// fruits.forEach(fruit => console.log(`I like ${fruit}`));//useforeach



